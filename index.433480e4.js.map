{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,UA2BrC,AAxBA,SAAoB,CAAS,CAAE,CAAK,M,EAGlC,AAFiB,CAAC,EAAU,KAAK,CAAwC,CAAxD,MAAA,C,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAqB,EAAU,OAAO,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAAtC,CAAwC,EAAU,KAAK,CAAC,EAEhE,OAAO,CAAC,SAAC,CAAlB,EACE,GAAI,EACF,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,IAAI,CAAC,MAAM,CAAE,IAAK,CAC5C,IAAM,EAAM,EAAQ,IAAI,CAAC,EAAE,CACrB,EAAO,EAAI,KAAK,CATV,EASiB,CAE7B,GAAI,EAAM,CACR,IAAM,EACJ,IAAY,EAAM,KAAK,EAAI,IAAY,EAAM,KAAK,CAC9C,SAAS,aAAa,CAAC,MACvB,SAAS,aAAa,CAAC,KAE7B,CAAA,EAAQ,WAAW,CAAG,EAAK,WAAW,EAAI,EAAK,SAAS,CAExD,EAAI,YAAY,CAAC,EAAS,EAAI,KAAK,CAAC,EAAI,KAAK,CAAC,MAAM,CAAG,EAAE,CAC3D,CACF,CAEJ,EACF,EAEW,EA1BS","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar columnIndex = 1;\nfunction copyColumn(tableData, index) {\n    var sections = [\n        tableData.tHead\n    ].concat(_to_consumable_array(tableData.tBodies), [\n        tableData.tFoot\n    ]);\n    sections.forEach(function(section) {\n        if (section) for(var i = 0; i < section.rows.length; i++){\n            var row = section.rows[i];\n            var cell = row.cells[index];\n            if (cell) {\n                var newCell = section === table.tHead || section === table.tFoot ? document.createElement(\"th\") : document.createElement(\"td\");\n                newCell.textContent = cell.textContent || cell.innerText;\n                row.insertBefore(newCell, row.cells[row.cells.length - 1]);\n            }\n        }\n    });\n}\ncopyColumn(table, columnIndex);\n\n//# sourceMappingURL=index.433480e4.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst columnIndex = 1;\n\nfunction copyColumn(tableData, index) {\n  const sections = [tableData.tHead, ...tableData.tBodies, tableData.tFoot];\n\n  sections.forEach((section) => {\n    if (section) {\n      for (let i = 0; i < section.rows.length; i++) {\n        const row = section.rows[i];\n        const cell = row.cells[index];\n\n        if (cell) {\n          const newCell =\n            section === table.tHead || section === table.tFoot\n              ? document.createElement('th')\n              : document.createElement('td');\n\n          newCell.textContent = cell.textContent || cell.innerText;\n\n          row.insertBefore(newCell, row.cells[row.cells.length - 1]);\n        }\n      }\n    }\n  });\n}\n\ncopyColumn(table, columnIndex);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","querySelector","copyColumn","tableData","index","sections","tHead","concat","_array_without_holes","isArray","tBodies","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","tFoot","forEach","section","rows","row","cell","cells","newCell","createElement","textContent","innerText","insertBefore"],"version":3,"file":"index.433480e4.js.map"}